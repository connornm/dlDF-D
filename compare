#!/usr/bin/env python
import pickle, sys, random, lib, os, pdb, funcs as f
sys.path.append('praxis/')
from praxis import praxis
from numpy import log, exp, sqrt
global data
global samples
global maxiter
maxiter=10000
max_sample=100
atoms=15
samples=10
tolerance = 0.03
max_step = 1
# Initial parameters

# Old parameters
#param = [
#	0.00118328602,		#mu
#	5.33671865512,		#kappa
#	-0.143287030854,	#a_1
#	-0.0470989967546,	#a_2
#	-0.405760074055,	#a_3
#	0.0648415072706,	#a_4
#	4.32613300189,		#caa_1
#	-10.7515744045,		#caa_2
#	0.599485542764,		#zeta_hf
#	-2.40178165311,		#cab_1
#	 1.92115316339		#cab_2
#]

# 2009 szw paper
param = [
	0.3511128,		#mu
	4.8827323,		#kappa
	-0.16.7571,		#a_1
	-0.1880028,		#a_2
	-0.4490609,		#a_3
	-0.0082359,		#a_4
	-2.5960897,		#caa_1
	2.2233793,		#caa_2
	0.6144129,		#zeta_hf
	5.9515308,		#cab_1
	-11.1602877		#cab_2
]


param[0] = f.isgin(param[0])
data = lib.data()
#data.meta['dimer']={'BLIND_dimer'+(str(random.randint(1,max_sample)).zfill(5)) for i in range(samples)}
data.meta['dimer']={'BLIND_dimer'+str(i).zfill(5) for i in range(1, samples)}
data.split('xyz','xyz',atoms,'BLIND_dimer00001','BLIND_monomer','extra')
data.meta['system'].add('BLIND_monomer')
data.meta['system']-={'extra'}
for s in data.meta['dimer']:
	data.meta['system'].add(s)	
	data.split('xyz','xyz',s,'BLIND_monA'+s[11:16],'BLIND_monB'+s[11:16])
data.convert('xyz', 'gaussian')
data.convert('gaussian', 'disp_dimer', key='dimer')
data.get('energy', 'disp', key='dimer')
data.get('energy', 'sapt', key='dimer')
data.get('distance', 'sapt', key='dimer')
os.system('echo $(date) > output')
f.w('--------------------------------------------')
os.system('echo "iteration error mu kappa a_1 a_2 a_3 a_4 caa_1 caa_2 zeta_hf cab_1 cab_2" > szw_output')



paramx=[param[0],1.0,param[1],0.0,0.0,0.0,1.0,param[2],param[3],param[4],param[5]]
paramcp= [1.0,param[6],param[7],0.0,0.0,param[8]]
paramcap=[1.0,param[9],param[10],0.0,0.0]

f.save_array(paramx, 'data/gaussian/ParamM05X.dat')
f.save_array(paramcp, 'data/gaussian/ParamM05CP.dat')
f.save_array(paramcap, 'data/gaussian/ParamM05CAP.dat')


data.wait('BLIND')
data.run('BLIND')
data.wait('BLIND')

pickle.dump(data, open('.save/data', 'wb'))

