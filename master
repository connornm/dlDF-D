#!/usr/bin/env python
import sys
sys.path.append('praxis/')
from praxis import praxis
import lib, os
from numpy import exp, log

tolerance = 0.02
max_step = 1

# All data and filetype markers
global data
data = lib.data()
data.read_input()
data.energy('ener')
data.run('cnf')

# Main loop called by praxis with input parameters to be optimized
def loop(param, dummy):

	cutoff = 0.04
	hart = 627.51 #Hartree to kcal/mol conversion factor
	global data

	data.

	paramx=[param[0],1.0,param[1],0.0,0.0,0.0,1.0,param[2],param[3],param[4],param[5]]
	paramcp= [1.0,param[6],param[7],0.0,0.0,param[8]]
	paramcap=[1.0,param[9],param[10],0.0,0.0]

	lib.save_array(paramx, 'data/dat/param/ParamM05X.dat')
	lib.save_array(paramcp, 'data/dat/param/ParamM05CP.dat')
	lib.save_array(paramcap, 'data/dat/param/ParamM05CAP.dat')
	
	data.wait()
	data.run('com')
	data.wait()
	data.energy('log')
	data.mult('log', -1*hart)	
	data.mult('monomer_log', hart)
	
	data.update_error('ener', 'log', 'ener', 'monomer_com', 'cnf')	
	data.write_output()

	w = lambda s : os.system("echo '"+s+"' >> output")	
	for i in range(len(param)):
		w('Parameter '+str(i)+' : '+str(param[i]))

	return data.error
 

# Prepares the .com files for the monomer and dimers
lib.prep_dim_mon(systems)
# Initial parameters	
param=[1.18328602E-03, 4.8827323, -0.163757125, -0.188002773, -0.449060892, -0.00823585719, 5.9515308, \
        -11.1602877, 0.614413, -2.59608972, 2.22337926]

output=praxis(tolerance, max_step, 11, 4, param, loop)
print(output)

