#!/usr/bin/env python
import sys
sys.path.append('praxis/')
from praxis import praxis
import lib, os, pdb
from numpy import exp, log
tolerance = 0.03
max_step = 1

global hart
hart = 627.51 #Hartree to kcal/mol conversion factor



def w(s):
	os.system("echo '"+s+"' >> output")	

def get_error(dat):
	error = 0
	for NAMEKEY in dat.NAMEKEYS:
		dE = hart*(dat.E[NAMEKEY]['log']-dat.E[NAMEKEY]['monomerA_log']-dat.E[NAMEKEY]['monomerB_log'])-dat.E[NAMEKEY]['cnf']
		w(' ')
		w('E_dim-E_A-E_B+E_disp='+str(dE))
		w('E_SAPT='+str(dat.E[NAMEKEY]['ener']))		
		error += ((dat.E[NAMEKEY]['ener']-dE)/(dat.E[NAMEKEY]['ener']))**2
	return error

# All data and filetype markers
new_stuff = False
global data
lib.new_list('CH4', 20)
data = lib.data()
data.read_input()
data.convert('xyz', 'com')
data.convert('com', 'cnf')
data.convert('com', 'monomerA_com')
data.convert('com', 'monomerB_com')
data.get_energy('cnf')
data.get_energy('ener')
os.system('echo $(date) > output')
# Main loop called by praxis with input parameters to be optimized
def loop(param, dummy):

	cutoff = 0.04
	global data
	global hart

	paramx=[param[0],1.0,param[1],0.0,0.0,0.0,1.0,param[2],param[3],param[4],param[5]]
	paramcp= [1.0,param[6],param[7],0.0,0.0,param[8]]
	paramcap=[1.0,param[9],param[10],0.0,0.0]

	lib.save_array(paramx, 'data/dat/param/ParamM05X.dat')
	lib.save_array(paramcp, 'data/dat/param/ParamM05CP.dat')
	lib.save_array(paramcap, 'data/dat/param/ParamM05CAP.dat')
	
	data.wait()
	data.run('monomerA_com')
	data.run('monomerB_com')
	data.run('com')
	data.wait()
	data.get_energy('log')
	data.get_energy('monomerA_log')
	data.get_energy('monomerB_log')
	data.iteration += 1
	error = get_error(data)

	w(' ')
	w('Error: '+str(error))
	w(' ')
	for i in range(len(param)):
		w('Parameter '+str(i)+' : '+str(param[i]))
	return error 

# Initial parameters	
param=[1.18328602E-03, 4.8827323, -0.163757125, -0.188002773, -0.449060892, -0.00823585719, 5.9515308, \
        -11.1602877, 0.614413, -2.59608972, 2.22337926]

output=praxis(tolerance, max_step, 11, 4, param, loop)
print(output)

