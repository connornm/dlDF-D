#!/usr/bin/env python
# Takes a .com system file and makes dimer and monomer .com files
#
# WARNING: This code is janky and was threw together in a pinch to fit a very
# specific file format in a not robust way. If you know of a better
# way to add "-Bq" to the left of every first number in a line of data,
# I recommend you rewrite this. 
#
# Usage:
#	./prep_dim_mon SYSTEM	

import re, os, sys, pdb

# Key to signal data is to be collected below
key = '0 1'
#End data collection
end=-4


def count(key, fvect):
	for i in range(len(fvect)):
		if fvect[i]==key:
			return i+1

def ghost(string):
	outstr = ''
	strvect = string.split(' ')
	for i in range(len(strvect)):
		try:
			int(strvect[i])
			strvect[i] = strvect[i]+'-Bq'
			for i in range(len(strvect)):
				if strvect[i] == '':
					outstr += ' '
				else:
					outstr += strvect[i]	
		except:
			pass
		
	return outstr

system=sys.argv[1]
os.system('touch data/com/'+system+'_D.com')
os.system('touch data/com/'+system+'_A.com')
os.system('touch data/com/'+system+'_B.com')
f = open('data/com/'+system+'.com', 'r')
f.seek(0)
fstr = f.read()
f.close()
fvect = fstr.split('\n')
start = count(key, fvect)
header = fvect[0:start]
footer = fvect[end:-1]
data = fvect[start:end]
strD = ''
strA = ''
strB = ''
for i in range(len(header)):
	strD += header[i] + '\n'
	strA += header[i] + '\n'
	strB += header[i] + '\n'
for i in range(len(data)):
	if data[i][2]=='0':
		pass
	else:
		if i >= (len(data)/2):
			strD += data[i] + '\n'
			strA += ghost(data[i]) + '\n'
			strB += data[i] + '\n'
		else:
			strD += data[i] + '\n'
			strA += data[i] + '\n'
			strB += ghost(data[i]) + '\n'

for i in range(len(footer)):
	strD += footer[i] + '\n'
	strA += footer[i] + '\n'
	strB += footer[i] + '\n'
fdimD = open('data/com/'+system+'_D.com', 'w')
fmonA = open('data/com/'+system+'_A.com', 'w')
fmonB = open('data/com/'+system+'_B.com', 'w')
fdimD.seek(0)
fmonA.seek(0)
fmonB.seek(0)
fdimD.write(strD)
fmonA.write(strA)
fmonB.write(strB)
